"use strict";(self.webpackChunknotion_next=self.webpackChunknotion_next||[]).push([[2143],{12143:(e,n,t)=>{t.r(n),t.d(n,{AllMigrations:()=>a});const a={endSchema:{pragmas:{user_version:37},tables:{notion:{info:{type:"table",sql:"CREATE TABLE notion (id integer primary key, key unique, value)",name:"notion",tbl_name:"notion"},columns:[{cid:0,name:"id",type:"INTEGER",notnull:0,dflt_value:null,pk:1},{cid:1,name:"key",type:"",notnull:0,dflt_value:null,pk:0},{cid:2,name:"value",type:"",notnull:0,dflt_value:null,pk:0}]},key_value_store:{info:{type:"table",sql:"CREATE TABLE key_value_store (id INTEGER PRIMARY KEY, key TEXT UNIQUE, value TEXT)",name:"key_value_store",tbl_name:"key_value_store"},columns:[{cid:0,name:"id",type:"INTEGER",notnull:0,dflt_value:null,pk:1},{cid:1,name:"key",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:2,name:"value",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},records:{info:{type:"table",sql:"CREATE TABLE records (\nrecord_table TEXT,\nrecord_id TEXT,\nrecord_value TEXT,\ntimestamp NUMERIC,\nparent_table TEXT,\nparent_id TEXT,\nimportance NUMERIC,\nuser_id TEXT, is_offline, space_id TEXT,\nCONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)",name:"records",tbl_name:"records"},columns:[{cid:0,name:"record_table",type:"TEXT",notnull:0,dflt_value:null,pk:1},{cid:1,name:"record_id",type:"TEXT",notnull:0,dflt_value:null,pk:2},{cid:2,name:"record_value",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:3,name:"timestamp",type:"NUMERIC",notnull:0,dflt_value:null,pk:0},{cid:4,name:"parent_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"parent_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"importance",type:"NUMERIC",notnull:0,dflt_value:null,pk:0},{cid:7,name:"user_id",type:"TEXT",notnull:0,dflt_value:null,pk:3},{cid:8,name:"is_offline",type:"",notnull:0,dflt_value:null,pk:0},{cid:9,name:"space_id",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},block:{info:{type:"table",sql:"CREATE TABLE block (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nproperties TEXT,\ncontent TEXT,\ndiscussions TEXT,\nview_ids TEXT,\ncollection_id TEXT,\npermissions TEXT,\ncreated_time REAL,\nlast_edited_time REAL,\ncopied_from TEXT,\nfile_ids TEXT,\nignore_block_count INTEGER,\nis_template INTEGER,\nparent_id TEXT,\nparent_table TEXT,\nalive INTEGER NOT NULL,\nmoved TEXT,\nformat TEXT,\ncreated_by TEXT,\nlast_edited_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\ncontent_classification TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_last_access_timestamp REAL NOT NULL,\nmeta_role TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"block",tbl_name:"block"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:2,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:3,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:4,name:"type",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"properties",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"content",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"discussions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"view_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:9,name:"collection_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:10,name:"permissions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"created_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:12,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:13,name:"copied_from",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"file_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"ignore_block_count",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:16,name:"is_template",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:17,name:"parent_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"parent_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:19,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:20,name:"moved",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:21,name:"format",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:22,name:"created_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:23,name:"last_edited_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:24,name:"created_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:25,name:"created_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:26,name:"last_edited_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:27,name:"last_edited_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:28,name:"content_classification",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:29,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:30,name:"meta_last_access_timestamp",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:31,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},space:{info:{type:"table",sql:"CREATE TABLE space (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\npermissions TEXT,\npermission_groups TEXT,\nemail_domains TEXT,\npages TEXT,\nicon TEXT,\ndisable_public_access INTEGER,\ndisable_public_access_requests INTEGER,\ndisable_guests INTEGER,\ndisable_move_to_space INTEGER,\ndisable_export INTEGER,\ndisable_space_page_edits INTEGER,\nbeta_enabled INTEGER,\ncreated_time REAL,\nlast_edited_time REAL,\ndeleted_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\nadmin_disable_public_access INTEGER,\nspace_pages TEXT,\nplan_type TEXT,\ninvite_link_enabled INTEGER,\ninitial_use_cases TEXT,\npublic_home_page TEXT,\nbot_settings TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, subscription_tier TEXT, disable_team_creation BOOLEAN, overdue_subscription TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"space",tbl_name:"space"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"permissions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"permission_groups",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"email_domains",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:9,name:"disable_public_access",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:10,name:"disable_public_access_requests",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:11,name:"disable_guests",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:12,name:"disable_move_to_space",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:13,name:"disable_export",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:14,name:"disable_space_page_edits",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:15,name:"beta_enabled",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:16,name:"created_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:17,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:18,name:"deleted_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:19,name:"created_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:20,name:"created_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:21,name:"last_edited_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:22,name:"last_edited_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:23,name:"admin_disable_public_access",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:24,name:"space_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:25,name:"plan_type",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:26,name:"invite_link_enabled",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:27,name:"initial_use_cases",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:28,name:"public_home_page",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:29,name:"bot_settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:30,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:31,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:32,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:33,name:"subscription_tier",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:34,name:"disable_team_creation",type:"BOOLEAN",notnull:0,dflt_value:null,pk:0},{cid:35,name:"overdue_subscription",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},space_view:{info:{type:"table",sql:"CREATE TABLE space_view (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nbookmarked_pages TEXT,\nshared_pages TEXT,\nvisited_templates TEXT,\nsidebar_hidden_templates TEXT,\nnotify_mobile INTEGER NOT NULL,\nnotify_desktop INTEGER NOT NULL,\nnotify_email INTEGER NOT NULL,\nnotify_email_always INTEGER,\ncreated_getting_started INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\ncreated_onboarding_templates INTEGER,\nprivate_pages TEXT,\njoined INTEGER,\njoined_teams TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, qna_suggested_questions TEXT, qna_suggested_questions_last_updated_time BIGINT, ai_suggestions TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"space_view",tbl_name:"space_view"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"bookmarked_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"shared_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"visited_templates",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"sidebar_hidden_templates",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"notify_mobile",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:9,name:"notify_desktop",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:10,name:"notify_email",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:11,name:"notify_email_always",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:12,name:"created_getting_started",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:13,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:14,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:15,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:16,name:"created_onboarding_templates",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:17,name:"private_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"joined",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:19,name:"joined_teams",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:20,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:21,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:22,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:23,name:"qna_suggested_questions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:24,name:"qna_suggested_questions_last_updated_time",type:"BIGINT",notnull:0,dflt_value:null,pk:0},{cid:25,name:"ai_suggestions",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},transactions:{info:{type:"table",sql:"CREATE TABLE transactions (\nid TEXT NOT NULL,\nuser_id TEXT,\nspace_id TEXT,\noperations TEXT NOT NULL,\ntimestamp REAL NOT NULL\n, debug TEXT)",name:"transactions",tbl_name:"transactions"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:1,name:"user_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:2,name:"space_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:3,name:"operations",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"timestamp",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:5,name:"debug",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},user_root:{info:{type:"table",sql:"CREATE TABLE user_root (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nspace_views TEXT,\nleft_spaces TEXT,\nspace_view_pointers TEXT,\ndeleted_email TEXT,\nlast_version REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"user_root",tbl_name:"user_root"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"space_views",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:3,name:"left_spaces",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"space_view_pointers",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"deleted_email",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:7,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:8,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},notion_user:{info:{type:"table",sql:"CREATE TABLE notion_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nemail TEXT NOT NULL,\ngiven_name TEXT,\nfamily_name TEXT,\nname TEXT,\nprofile_photo TEXT,\nonboarding_completed INTEGER,\nmobile_onboarding_completed INTEGER,\nclipper_onboarding_completed INTEGER,\nreverify INTEGER,\nis_banned INTEGER,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, suspended_time REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"notion_user",tbl_name:"notion_user"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"email",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"given_name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"family_name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"profile_photo",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"onboarding_completed",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:9,name:"mobile_onboarding_completed",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:10,name:"clipper_onboarding_completed",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:11,name:"reverify",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:12,name:"is_banned",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:13,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:14,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:15,name:"suspended_time",type:"REAL",notnull:0,dflt_value:null,pk:0}]},collection_view:{info:{type:"table",sql:'CREATE TABLE "collection_view" (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nname TEXT,\nicon TEXT,\npage_sort TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nformat TEXT,\nquery2 TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)',name:"collection_view",tbl_name:"collection_view"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"type",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"page_sort",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:8,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:9,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:10,name:"format",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"query2",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:12,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:13,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:14,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},collection:{info:{type:"table",sql:"CREATE TABLE collection (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\ndescription TEXT,\nicon TEXT,\ncover TEXT,\nschema TEXT,\nformat TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nfile_ids TEXT,\ntemplate_pages TEXT,\ncopied_from TEXT,\nmigrated INTEGER,\nspace_id TEXT NOT NULL,\ndeleted_schema TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"collection",tbl_name:"collection"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"description",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"cover",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"schema",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"format",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:9,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:10,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:11,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:12,name:"file_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"template_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"copied_from",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"migrated",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:16,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:17,name:"deleted_schema",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:19,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},team:{info:{type:"table",sql:"CREATE TABLE team (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nname TEXT NOT NULL,\ndescription TEXT,\nicon TEXT,\ncreated_time REAL NOT NULL,\ncreated_by_table TEXT NOT NULL,\ncreated_by_id TEXT NOT NULL,\nlast_edited_time REAL,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\narchived_by TEXT,\nteam_pages TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nsettings TEXT,\nis_default INTEGER,\nmembership TEXT,\npermissions TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, pinned_pages TEXT, archived_at REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"team",tbl_name:"team"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"name",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"description",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"created_time",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:8,name:"created_by_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:9,name:"created_by_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:10,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:11,name:"last_edited_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:12,name:"last_edited_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"archived_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"team_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:16,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:17,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"is_default",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:19,name:"membership",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:20,name:"permissions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:21,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:22,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:23,name:"pinned_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:24,name:"archived_at",type:"REAL",notnull:0,dflt_value:null,pk:0}]},user_settings:{info:{type:"table",sql:"CREATE TABLE user_settings (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nsettings TEXT,\n/* We also add any number of meta_ columns, but these are required */\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"user_settings",tbl_name:"user_settings"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:5,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},notification:{info:{type:"table",sql:"CREATE TABLE notification (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nuser_id TEXT NOT NULL,\nactivity_id TEXT NOT NULL,\nreceived INTEGER NOT NULL,\nread INTEGER NOT NULL,\nvisited INTEGER NOT NULL,\nemailed INTEGER NOT NULL,\ninvalid INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\nnavigable_block_id TEXT,\ncollection_id TEXT,\ntype TEXT NOT NULL,\nend_time TEXT NOT NULL,\nchannel TEXT,\narchived_at INTEGER,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, discussion_id TEXT, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"notification",tbl_name:"notification"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"user_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"activity_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"received",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:6,name:"read",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:7,name:"visited",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:8,name:"emailed",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:9,name:"invalid",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:10,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:11,name:"navigable_block_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:12,name:"collection_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"type",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:14,name:"end_time",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:15,name:"channel",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:16,name:"archived_at",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:17,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:18,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:19,name:"discussion_id",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},discussion:{info:{type:"table",sql:"CREATE TABLE discussion (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ncontext TEXT,\nresolved INTEGER NOT NULL,\ncomments TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"discussion",tbl_name:"discussion"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"context",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"resolved",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:7,name:"comments",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:9,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:10,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},comment:{info:{type:"table",sql:"CREATE TABLE comment (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ntext TEXT,\ncreated_time REAL NOT NULL,\nlast_edited_time REAL,\nalive INTEGER NOT NULL,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nspace_id TEXT NOT NULL,\ncontent TEXT,\nreactions TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"comment",tbl_name:"comment"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"text",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"created_time",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:7,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:8,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:9,name:"created_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:10,name:"created_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:12,name:"content",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"reactions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:15,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},reaction:{info:{type:"table",sql:"CREATE TABLE reaction (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\ncreated_time REAL,\nparent_table TEXT NOT NULL,\nparent_id TEXT NOT NULL,\nicon TEXT NOT NULL,\nactors TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"reaction",tbl_name:"reaction"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:2,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:3,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:4,name:"created_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:5,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:6,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:7,name:"icon",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:8,name:"actors",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:9,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:10,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},space_user:{info:{type:"table",sql:"CREATE TABLE space_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nuser_id TEXT NOT NULL,\nspace_id TEXT NOT NULL,\ninvite_id TEXT,\nrole TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",name:"space_user",tbl_name:"space_user"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"user_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:3,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"invite_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:6,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:7,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]}},indexes:{sqlite_autoindex_notion_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_notion_1",tbl_name:"notion"},columns:[{name:"key",cid:1,seqno:0}]},sqlite_autoindex_key_value_store_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_key_value_store_1",tbl_name:"key_value_store"},columns:[{name:"key",cid:1,seqno:0}]},sqlite_autoindex_records_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_records_1",tbl_name:"records"},columns:[{name:"record_table",cid:0,seqno:0},{name:"record_id",cid:1,seqno:1},{name:"user_id",cid:7,seqno:2}]},record_lru_deletion_order:{info:{type:"index",sql:"CREATE INDEX record_lru_deletion_order ON records (is_offline, importance, timestamp)",name:"record_lru_deletion_order",tbl_name:"records"},columns:[{name:"is_offline",cid:8,seqno:0},{name:"importance",cid:6,seqno:1},{name:"timestamp",cid:3,seqno:2}]},record_parent:{info:{type:"index",sql:"CREATE INDEX record_parent ON records (parent_id, user_id)",name:"record_parent",tbl_name:"records"},columns:[{name:"parent_id",cid:5,seqno:0},{name:"user_id",cid:7,seqno:1}]},sqlite_autoindex_block_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_block_1",tbl_name:"block"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:29,seqno:1}]},block_parent_id:{info:{type:"index",sql:"CREATE INDEX block_parent_id ON block (parent_id, meta_user_id)",name:"block_parent_id",tbl_name:"block"},columns:[{name:"parent_id",cid:17,seqno:0},{name:"meta_user_id",cid:29,seqno:1}]},lru_deletion_order:{info:{type:"index",sql:"CREATE INDEX lru_deletion_order ON block (meta_last_access_timestamp)",name:"lru_deletion_order",tbl_name:"block"},columns:[{name:"meta_last_access_timestamp",cid:30,seqno:0}]},sqlite_autoindex_space_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_space_1",tbl_name:"space"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:30,seqno:1}]},sqlite_autoindex_space_view_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_space_view_1",tbl_name:"space_view"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:20,seqno:1}]},transactions_user_id:{info:{type:"index",sql:"CREATE INDEX transactions_user_id ON transactions (user_id)",name:"transactions_user_id",tbl_name:"transactions"},columns:[{name:"user_id",cid:1,seqno:0}]},sqlite_autoindex_user_root_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_user_root_1",tbl_name:"user_root"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:7,seqno:1}]},sqlite_autoindex_notion_user_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_notion_user_1",tbl_name:"notion_user"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:13,seqno:1}]},sqlite_autoindex_collection_view_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_collection_view_1",tbl_name:"collection_view"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:13,seqno:1}]},sqlite_autoindex_collection_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_collection_1",tbl_name:"collection"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:18,seqno:1}]},sqlite_autoindex_team_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_team_1",tbl_name:"team"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:21,seqno:1}]},sqlite_autoindex_user_settings_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_user_settings_1",tbl_name:"user_settings"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:4,seqno:1}]},sqlite_autoindex_notification_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_notification_1",tbl_name:"notification"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:17,seqno:1}]},sqlite_autoindex_discussion_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_discussion_1",tbl_name:"discussion"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:9,seqno:1}]},sqlite_autoindex_comment_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_comment_1",tbl_name:"comment"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:14,seqno:1}]},sqlite_autoindex_reaction_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_reaction_1",tbl_name:"reaction"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:9,seqno:1}]},sqlite_autoindex_space_user_1:{info:{type:"index",sql:null,name:"sqlite_autoindex_space_user_1",tbl_name:"space_user"},columns:[{name:"id",cid:0,seqno:0},{name:"meta_user_id",cid:6,seqno:1}]}}},migrations:[{id:1,description:"ensure-existing-schema",statements:[{sql:"create table if not exists notion (id integer primary key, key unique, value)"},{sql:"CREATE TABLE IF NOT EXISTS key_value_store (id INTEGER PRIMARY KEY, key TEXT UNIQUE, value TEXT)"}]},{id:2,description:"indexed-record-cache-and-transactions",statements:[{sql:"CREATE TABLE IF NOT EXISTS transactions (\n\tid TEXT PRIMARY KEY,\n\tvalue TEXT\n)"},{sql:"CREATE TABLE IF NOT EXISTS records (\n\trecord_table TEXT,\n\trecord_id TEXT,\n\trecord_value TEXT,\n\ttimestamp NUMERIC,\n\tparent_table TEXT,\n\tparent_id TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (record_table, record_id)\n)"},{sql:"CREATE INDEX record_lru_timestamp ON records (timestamp)"},{sql:"CREATE INDEX record_parent ON records (record_table, parent_table, parent_id)"},{sql:"INSERT INTO transactions (id, value)\nSELECT substr(key, 24), json_extract(value, '$.value') FROM notion\nWHERE key LIKE 'LocalTransactionStore3:%'"}]},{id:3,description:"record-cache-importance",statements:[{sql:"ALTER TABLE records ADD COLUMN importance NUMERIC"},{sql:"DROP INDEX record_lru_timestamp"},{sql:"CREATE INDEX record_lru_important_timestamp ON records (importance, timestamp)"}]},{id:4,description:"add-user-id-column-to-records",statements:[{sql:"DROP INDEX record_parent"},{sql:"DROP INDEX record_lru_important_timestamp"},{sql:"ALTER TABLE records RENAME TO previous_records"},{sql:"CREATE TABLE IF NOT EXISTS records (\n\trecord_table TEXT,\n\trecord_id TEXT,\n\trecord_value TEXT,\n\ttimestamp NUMERIC,\n\tparent_table TEXT,\n\tparent_id TEXT,\n\timportance NUMERIC,\n\tuser_id TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)"},{sql:"INSERT INTO records (record_table, record_id, record_value, timestamp, parent_table, parent_id, importance)\nSELECT record_table, record_id, record_value, timestamp, parent_table, parent_id, importance FROM previous_records"},{sql:"DROP TABLE previous_records"},{sql:"CREATE INDEX record_parent ON records (record_table, parent_table, parent_id, user_id)"},{sql:"CREATE INDEX record_lru_important_timestamp ON records (importance, timestamp)"},{sql:"CREATE INDEX record_user_id ON records (user_id)"}]},{id:5,description:"add-new-column-and-index-for-userid-to-transactions-table",statements:[{sql:"ALTER TABLE transactions ADD COLUMN user_id TEXT"},{sql:"CREATE INDEX transactions_user_id ON transactions (user_id)"}]},{id:6,description:"add-offline-tables",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_root (\n    user_id TEXT NOT NULL,\n    record_table TEXT NOT NULL,\n    record_id TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)"},{sql:"CREATE TABLE IF NOT EXISTS offline_sync_parent (\n    user_id TEXT NOT NULL,\n    root_table TEXT NOT NULL,\n    root_id TEXT NOT NULL,\n    sync_parent_table TEXT NOT NULL,\n    sync_parent_id TEXT NOT NULL,\n    state TEXT NOT NULL,\n    last_updated_local_timestamp INTEGER NOT NULL,\n    last_synced_global_cursor TEXT,\n    CONSTRAINT primary_key PRIMARY KEY (sync_parent_table, sync_parent_id, user_id)\n)"},{sql:"CREATE INDEX offline_sync_parent_root ON offline_sync_parent (user_id, root_table, root_id)"}]},{id:7,description:"add-offline-root-record-junction-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_record_pointer (\n    user_id TEXT NOT NULL,\n    root_table TEXT NOT NULL,\n    root_id TEXT NOT NULL,\n    sync_parent_table TEXT NOT NULL,\n    sync_parent_id TEXT NOT NULL,\n    record_table TEXT NOT NULL,\n    record_id TEXT NOT NULL,\n    is_full_sync_in_progress NUMERIC NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (user_id, root_id, sync_parent_id, record_id)\n)"},{sql:"CREATE INDEX record_id_idx ON offline_record_pointer (record_id)"},{sql:"CREATE INDEX root_id_idx ON offline_record_pointer (root_id)"},{sql:"CREATE INDEX sync_parent_id_idx ON offline_record_pointer (sync_parent_id, is_full_sync_in_progress)"}]},{id:8,description:"add-offline-flag-to-records",statements:[{sql:"ALTER TABLE records ADD COLUMN is_offline"},{sql:"DROP INDEX record_lru_important_timestamp"},{sql:"CREATE INDEX record_lru_deletion_order ON records (is_offline, importance, timestamp)"}]},{id:9,description:"add-space-id-column-to-records",statements:[{sql:"ALTER TABLE records ADD COLUMN space_id TEXT"}]},{id:10,description:"restructure-record-parent-index",statements:[{sql:"DROP INDEX IF EXISTS record_parent"},{sql:"DROP INDEX IF EXISTS record_user_id"},{sql:"CREATE INDEX record_user_parent_id ON records (user_id, parent_id, parent_table, record_table)"}]},{id:11,description:"undo-record-parent-index-restructure",statements:[{sql:"DROP INDEX IF EXISTS record_user_parent_id"},{sql:"CREATE INDEX IF NOT EXISTS record_parent ON records (parent_id, user_id)"}]},{id:12,description:"remove-offline-tables",statements:[{sql:"DROP TABLE IF EXISTS offline_record_pointer"},{sql:"DROP TABLE IF EXISTS offline_sync_parent"}]},{id:13,description:"create-block-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS block (\n\tid TEXT NOT NULL,\n\tspace_id TEXT NOT NULL,\n\tversion REAL NOT NULL,\n\tlast_version REAL,\n\ttype TEXT NOT NULL,\n\tproperties TEXT,\n\tcontent TEXT,\n\tdiscussions TEXT,\n\tview_ids TEXT,\n\tcollection_id TEXT,\n\tpermissions TEXT,\n\tcreated_time REAL,\n\tlast_edited_time REAL,\n\tcopied_from TEXT,\n\tfile_ids TEXT,\n\tignore_block_count INTEGER,\n\tis_template INTEGER,\n\tparent_id TEXT,\n\tparent_table TEXT,\n\talive INTEGER NOT NULL,\n\tmoved TEXT,\n\tformat TEXT,\n\tcreated_by TEXT,\n\tlast_edited_by TEXT,\n\tcreated_by_table TEXT,\n\tcreated_by_id TEXT,\n\tlast_edited_by_table TEXT,\n\tlast_edited_by_id TEXT,\n\tcontent_classification TEXT,\n\tmeta_user_id TEXT NOT NULL,\n\tmeta_last_access_timestamp REAL NOT NULL,\n\tmeta_role TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE INDEX block_parent_id ON block (parent_id, meta_user_id)"},{sql:"CREATE INDEX lru_deletion_order ON block (meta_last_access_timestamp)"}]},{id:14,description:"copy-blocks-to-block-table",statements:[{sql:"INSERT OR IGNORE INTO block\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.type') as type,\n\tjson_extract(record_value, '$.value.properties') as properties,\n\tjson_extract(record_value, '$.value.content') as content,\n\tjson_extract(record_value, '$.value.discussions') as discussions,\n\tjson_extract(record_value, '$.value.view_ids') as view_ids,\n\tjson_extract(record_value, '$.value.collection_id') as collection_id,\n\tjson_extract(record_value, '$.value.permissions') as permissions,\n\tjson_extract(record_value, '$.value.created_time') as created_time,\n\tjson_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n\tjson_extract(record_value, '$.value.copied_from') as copied_from,\n\tjson_extract(record_value, '$.value.file_ids') as file_ids,\n\tjson_extract(record_value, '$.value.ignore_block_count') as ignore_block_count,\n\tjson_extract(record_value, '$.value.is_template') as is_template,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.alive') as alive,\n\tjson_extract(record_value, '$.value.moved') as moved,\n\tjson_extract(record_value, '$.value.format') as format,\n\tjson_extract(record_value, '$.value.created_by') as created_by,\n\tjson_extract(record_value, '$.value.last_edited_by') as last_edited_by,\n\tjson_extract(record_value, '$.value.created_by_table') as created_by_table,\n\tjson_extract(record_value, '$.value.created_by_id') as created_by_id,\n\tjson_extract(record_value, '$.value.last_edited_by_table') as last_edited_by_table,\n\tjson_extract(record_value, '$.value.last_edited_by_id') as last_edited_by_id,\n\tjson_extract(record_value, '$.value.content_classification') as content_classification,\n\tuser_id as meta_user_id,\n\ttimestamp as meta_last_access_timestamp,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'block'\nLIMIT 5000"}]},{id:15,description:"create-space-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS space (\n\t\tid TEXT NOT NULL,\n\t\tversion REAL NOT NULL,\n\t\tlast_version REAL,\n\t\tname TEXT,\n\t\tpermissions TEXT,\n\t\tpermission_groups TEXT,\n\t\temail_domains TEXT,\n\t\tpages TEXT,\n\t\ticon TEXT,\n\t\tdisable_public_access INTEGER,\n\t\tdisable_public_access_requests INTEGER,\n\t\tdisable_guests INTEGER,\n\t\tdisable_move_to_space INTEGER,\n\t\tdisable_export INTEGER,\n\t\tdisable_space_page_edits INTEGER,\n\t\tbeta_enabled INTEGER,\n\t\tcreated_time REAL,\n\t\tlast_edited_time REAL,\n\t\tdeleted_by TEXT,\n\t\tcreated_by_table TEXT,\n\t\tcreated_by_id TEXT,\n\t\tlast_edited_by_table TEXT,\n\t\tlast_edited_by_id TEXT,\n\t\tadmin_disable_public_access INTEGER,\n\t\tspace_pages TEXT,\n\t\tplan_type TEXT,\n\t\tinvite_link_enabled INTEGER,\n\t\tinitial_use_cases TEXT,\n\t\tpublic_home_page TEXT,\n\t\tbot_settings TEXT,\n\t\tmeta_user_id TEXT NOT NULL,\n\t\tmeta_role TEXT,\n\t\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO space\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.name') as name,\n\tjson_extract(record_value, '$.value.permissions') as permissions,\n\tjson_extract(record_value, '$.value.permission_groups') as permission_groups,\n\tjson_extract(record_value, '$.value.email_domains') as email_domains,\n\tjson_extract(record_value, '$.value.pages') as pages,\n\tjson_extract(record_value, '$.value.icon') as icon,\n\tjson_extract(record_value, '$.value.disable_public_access') as disable_public_access,\n\tjson_extract(record_value, '$.value.disable_public_access_requests') as disable_public_access_requests,\n\tjson_extract(record_value, '$.value.disable_guests') as disable_guests,\n\tjson_extract(record_value, '$.value.disable_move_to_space') as disable_move_to_space,\n\tjson_extract(record_value, '$.value.disable_export') as disable_export,\n\tjson_extract(record_value, '$.value.disable_space_page_edits') as disable_space_page_edits,\n\tjson_extract(record_value, '$.value.beta_enabled') as beta_enabled,\n\tjson_extract(record_value, '$.value.created_time') as created_time,\n\tjson_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n\tjson_extract(record_value, '$.value.deleted_by') as deleted_by,\n\tjson_extract(record_value, '$.value.created_by_table') as created_by_table,\n\tjson_extract(record_value, '$.value.created_by_id') as created_by_id,\n\tjson_extract(record_value, '$.value.last_edited_by_table') as last_edited_by_table,\n\tjson_extract(record_value, '$.value.last_edited_by_id') as last_edited_by_id,\n\tjson_extract(record_value, '$.value.admin_disable_public_access') as admin_disable_public_access,\n\tjson_extract(record_value, '$.value.space_pages') as space_pages,\n\tjson_extract(record_value, '$.value.plan_type') as plan_type,\n\tjson_extract(record_value, '$.value.invite_link_enabled') as invite_link_enabled,\n\tjson_extract(record_value, '$.value.initial_use_cases') as initial_use_cases,\n\tjson_extract(record_value, '$.value.public_home_page') as public_home_page,\n\tjson_extract(record_value, '$.value.bot_settings') as bot_settings,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space'"},{sql:"CREATE TABLE IF NOT EXISTS space_view (\n\tid TEXT NOT NULL,\n\tversion REAL NOT NULL,\n\tlast_version REAL,\n\tspace_id TEXT NOT NULL,\n\tbookmarked_pages TEXT,\n\tshared_pages TEXT,\n\tvisited_templates TEXT,\n\tsidebar_hidden_templates TEXT,\n\tnotify_mobile INTEGER NOT NULL,\n\tnotify_desktop INTEGER NOT NULL,\n\tnotify_email INTEGER NOT NULL,\n\tnotify_email_always INTEGER,\n\tcreated_getting_started INTEGER,\n\tparent_id TEXT NOT NULL,\n\tparent_table TEXT NOT NULL,\n\talive INTEGER NOT NULL,\n\tcreated_onboarding_templates INTEGER,\n\tprivate_pages TEXT,\n\tjoined INTEGER,\n\tjoined_teams TEXT,\n\tmeta_user_id TEXT NOT NULL,\n\tmeta_role TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO space_view\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tjson_extract(record_value, '$.value.bookmarked_pages') as bookmarked_pages,\n\tjson_extract(record_value, '$.value.shared_pages') as shared_pages,\n\tjson_extract(record_value, '$.value.visited_templates') as visited_templates,\n\tjson_extract(record_value, '$.value.sidebar_hidden_templates') as sidebar_hidden_templates,\n\tjson_extract(record_value, '$.value.notify_mobile') as notify_mobile,\n\tjson_extract(record_value, '$.value.notify_desktop') as notify_desktop,\n\tjson_extract(record_value, '$.value.notify_email') as notify_email,\n\tjson_extract(record_value, '$.value.notify_email_always') as notify_email_always,\n\tjson_extract(record_value, '$.value.created_getting_started') as created_getting_started,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.alive') as alive,\n\tjson_extract(record_value, '$.value.created_onboarding_templates') as created_onboarding_templates,\n\tjson_extract(record_value, '$.value.private_pages') as private_pages,\n\tjson_extract(record_value, '$.value.joined') as joined,\n\tjson_extract(record_value, '$.value.joined_teams') as joined_teams,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space_view'"}]},{id:16,description:"improve-transaction-schema",statements:[{sql:"ALTER TABLE transactions RENAME TO legacy_transactions"},{sql:"DROP INDEX IF EXISTS transactions_user_id"},{sql:"CREATE TABLE IF NOT EXISTS transactions (\n    id TEXT NOT NULL,\n    user_id TEXT,\n    space_id TEXT,\n    operations TEXT NOT NULL,\n    timestamp REAL NOT NULL\n)"},{sql:"CREATE INDEX transactions_user_id ON transactions (user_id)"},{sql:"INSERT OR IGNORE INTO transactions\nSELECT\n    id,\n    user_id,\n    json_extract(value, '$.spaceId') as space_id,\n    json_extract(value, '$.operations') as operations,\n    json_extract(value, '$.timestamp') as timestamp\nFROM legacy_transactions"}]},{id:17,description:"drop-legacy-tables",statements:[{sql:"DROP TABLE IF EXISTS legacy_transactions"},{sql:"DROP TABLE IF EXISTS offline_root"}]},{id:18,description:"create-user-root-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS user_root (\n        id TEXT NOT NULL,\n        version REAL NOT NULL,\n        space_views TEXT,\n        left_spaces TEXT,\n        space_view_pointers TEXT,\n        deleted_email TEXT,\n        last_version REAL,\n        meta_user_id TEXT NOT NULL,\n        meta_role TEXT NOT NULL,\n        CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO user_root\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.space_views') as space_views,\n    json_extract(record_value, '$.value.left_spaces') as left_spaces,\n    json_extract(record_value, '$.value.space_view_pointers') as space_view_pointers,\n    json_extract(record_value, '$.value.deleted_email') as deleted_email,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'user_root'"},{sql:"CREATE TABLE IF NOT EXISTS notion_user (\n        id TEXT NOT NULL,\n        version REAL NOT NULL,\n        last_version REAL,\n        email TEXT NOT NULL,\n        given_name TEXT,\n        family_name TEXT,\n        name TEXT,\n        profile_photo TEXT,\n        onboarding_completed INTEGER,\n        mobile_onboarding_completed INTEGER,\n        clipper_onboarding_completed INTEGER,\n        reverify INTEGER,\n        is_banned INTEGER,\n        meta_user_id TEXT NOT NULL,\n        meta_role TEXT NOT NULL,\n        CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO notion_user\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.email') as email,\n    json_extract(record_value, '$.value.given_name') as given_name,\n    json_extract(record_value, '$.value.family_name') as family_name,\n    json_extract(record_value, '$.value.name') as name,\n    json_extract(record_value, '$.value.profile_photo') as profile_photo,\n    json_extract(record_value, '$.value.onboarding_completed') as onboarding_completed,\n    json_extract(record_value, '$.value.mobile_onboarding_completed') as mobile_onboarding_completed,\n    json_extract(record_value, '$.value.clipper_onboarding_completed') as clipper_onboarding_completed,\n    json_extract(record_value, '$.value.reverify') as reverify,\n    json_extract(record_value, '$.value.is_banned') as is_banned,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'notion_user'"}]},{id:19,description:"create-collection-view-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS collection_view (\n\tid TEXT NOT NULL,\n\tversion INTEGER NOT NULL,\n\tlast_version INTEGER,\n\ttype TEXT NOT NULL,\n\tname TEXT,\n\ticon TEXT,\n\tpage_sort TEXT,\n\tparent_id TEXT NOT NULL,\n\tparent_table TEXT NOT NULL,\n\talive INTEGER NOT NULL,\n\tformat TEXT,\n\tquery2 TEXT,\n\tspace_id TEXT NOT NULL,\n\tmeta_user_id TEXT NOT NULL,\n\tmeta_role TEXT NOT NULL,\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO collection_view\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.type') as type,\n\tjson_extract(record_value, '$.value.name') as name,\n\tjson_extract(record_value, '$.value.icon') as icon,\n\tjson_extract(record_value, '$.value.page_sort') as page_sort,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.alive') as alive,\n\tjson_extract(record_value, '$.value.format') as format,\n\tjson_extract(record_value, '$.value.query2') as query2,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'collection_view'"},{sql:"DELETE FROM records WHERE record_table = 'collection_view'"}]},{id:20,description:"migrate-collection-tables",statements:[{sql:"CREATE TABLE IF NOT EXISTS new_collection_view (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    last_version REAL,\n    type TEXT NOT NULL,\n    name TEXT,\n    icon TEXT,\n    page_sort TEXT,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    alive INTEGER NOT NULL,\n    format TEXT,\n    query2 TEXT,\n    space_id TEXT NOT NULL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO new_collection_view\nSELECT\n    *\nFROM collection_view"},{sql:"DROP TABLE collection_view"},{sql:"ALTER TABLE new_collection_view RENAME TO collection_view"},{sql:"CREATE TABLE IF NOT EXISTS collection (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    last_version REAL,\n    name TEXT,\n    description TEXT,\n    icon TEXT,\n    cover TEXT,\n    schema TEXT,\n    format TEXT,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    alive INTEGER NOT NULL,\n    file_ids TEXT,\n    template_pages TEXT,\n    copied_from TEXT,\n    migrated INTEGER,\n    space_id TEXT NOT NULL,\n    deleted_schema TEXT,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO collection\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.name') as name,\n    json_extract(record_value, '$.value.description') as description,\n    json_extract(record_value, '$.value.icon') as icon,\n    json_extract(record_value, '$.value.cover') as cover,\n    json_extract(record_value, '$.value.schema') as schema,\n    json_extract(record_value, '$.value.format') as format,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.alive') as alive,\n    json_extract(record_value, '$.value.file_ids') as file_ids,\n    json_extract(record_value, '$.value.template_pages') as template_pages,\n    json_extract(record_value, '$.value.copied_from') as copied_from,\n    json_extract(record_value, '$.value.migrated') as migrated,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.deleted_schema') as deleted_schema,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'collection'"},{sql:"DELETE FROM records WHERE record_table = 'collection'"}]},{id:21,description:"create-teams-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS team (\n \t\tid TEXT NOT NULL,\n \t\tversion REAL NOT NULL,\n \t\tlast_version REAL,\n\t\tspace_id TEXT NOT NULL,\n \t\tname TEXT NOT NULL,\n\t\tdescription TEXT,\n\t\ticon TEXT,\n\t\tcreated_time REAL NOT NULL,\n\t\tcreated_by_table TEXT NOT NULL,\n\t\tcreated_by_id TEXT NOT NULL,\n\t\tlast_edited_time REAL,\n\t\tlast_edited_by_table TEXT,\n \t\tlast_edited_by_id TEXT,\n\t\tarchived_by TEXT,\n\t\tteam_pages TEXT,\n\t\tparent_id TEXT NOT NULL,\n\t\tparent_table TEXT NOT NULL,\n\t\tsettings TEXT,\n\t\tis_default INTEGER,\n\t\tmembership TEXT,\n \t\tpermissions TEXT,\n \t\tmeta_user_id TEXT NOT NULL,\n \t\tmeta_role TEXT,\n \t\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO team\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tjson_extract(record_value, '$.value.name') as name,\n\tjson_extract(record_value, '$.value.description') as description,\n\tjson_extract(record_value, '$.value.icon') as icon,\n\tjson_extract(record_value, '$.value.created_time') as created_time,\n\tjson_extract(record_value, '$.value.created_by_table') as created_by_table,\n\tjson_extract(record_value, '$.value.created_by_id') as created_by_id,\n\tjson_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n\tjson_extract(record_value, '$.value.last_edited_by_table') as last_edited_by_table,\n\tjson_extract(record_value, '$.value.last_edited_by_id') as last_edited_by_id,\n\tjson_extract(record_value, '$.value.archived_by') as archived_by,\n\tjson_extract(record_value, '$.value.team_pages') as team_pages,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.settings') as settings,\n\tjson_extract(record_value, '$.value.is_default') as is_default,\n\tjson_extract(record_value, '$.value.membership') as membership,\n\tjson_extract(record_value, '$.value.permissions') as permissions,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'team'"}]},{id:22,description:"add-settings-to-space-view",statements:[{sql:"ALTER TABLE space_view ADD COLUMN settings TEXT"}]},{id:23,description:"team-pinned-pages",statements:[{sql:"ALTER TABLE team ADD COLUMN pinned_pages TEXT"}]},{id:24,description:"add-tx-debug-column",statements:[{sql:"ALTER TABLE transactions ADD COLUMN debug TEXT"}]},{id:25,description:"add-space-settings-column",statements:[{sql:"ALTER TABLE space ADD COLUMN settings TEXT"}]},{id:26,description:"add-subscription-tier-and-disable-team-creation-columns-to-space",statements:[{sql:"ALTER TABLE space ADD COLUMN subscription_tier TEXT"},{sql:"ALTER TABLE space ADD COLUMN disable_team_creation BOOLEAN"}]},{id:27,description:"add-archived-at-to-team",statements:[{sql:"ALTER TABLE team ADD COLUMN archived_at REAL"}]},{id:28,description:"no-op-browser-version-bump",statements:[]},{id:29,description:"space-overdue-subscription",statements:[{sql:"ALTER TABLE space ADD COLUMN overdue_subscription TEXT"}]},{id:30,description:"add-suspended-time-to-user",statements:[{sql:"ALTER TABLE notion_user ADD COLUMN suspended_time REAL"}]},{id:31,description:"extract-user-settings-table",statements:[{sql:"/* We only use three of SQLite's standard types: TEXT, INTEGER, REAL and\n   apply semantics at the language level */\nCREATE TABLE IF NOT EXISTS user_settings (\n\tid TEXT NOT NULL,\n\tversion INTEGER NOT NULL,\n    last_version INTEGER,\n    settings TEXT,\n\t/* We also add any number of meta_ columns, but these are required */\n\tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n\tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n\t/* Records of all types tend to be accessed by (user_id, id) tuple\n     and SQLite recommends against using common values as index prefixes */\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO user_settings\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.settings') as settings,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'user_settings'"},{sql:"DELETE FROM records WHERE record_table = 'user_settings'"}]},{id:32,description:"notification",statements:[{sql:"CREATE TABLE IF NOT EXISTS notification (\n \tid TEXT NOT NULL,\n \tversion INTEGER NOT NULL,\n    last_version INTEGER,\n    user_id TEXT NOT NULL,\n    activity_id TEXT NOT NULL,\n    received INTEGER NOT NULL,\n    read INTEGER NOT NULL,\n    visited INTEGER NOT NULL,\n    emailed INTEGER NOT NULL,\n    invalid INTEGER NOT NULL,\n    space_id TEXT NOT NULL,\n    navigable_block_id TEXT,\n    collection_id TEXT,\n    type TEXT NOT NULL,\n    end_time TEXT NOT NULL,\n    channel TEXT,\n    archived_at INTEGER,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \t/* Records of all types tend to be accessed by (user_id, id) tuple\n      and SQLite recommends against using common values as index prefixes */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO notification\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n \tjson_extract(record_value, '$.value.version') as version,\n \tjson_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.user_id') as user_id,\n    json_extract(record_value, '$.value.activity_id') as activity_id,\n    json_extract(record_value, '$.value.received') as received,\n    json_extract(record_value, '$.value.read') as read,\n    json_extract(record_value, '$.value.visited') as visited,\n    json_extract(record_value, '$.value.emailed') as emailed,\n    json_extract(record_value, '$.value.invalid') as invalid,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.navigable_block_id') as navigable_block_id,\n    json_extract(record_value, '$.value.collection_id') as collection_id,\n    json_extract(record_value, '$.value.type') as type,\n    json_extract(record_value, '$.value.end_time') as end_time,\n    json_extract(record_value, '$.value.channel') as channel,\n    json_extract(record_value, '$.value.archived_at') as archived_at,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'notification'"},{sql:" DELETE FROM records WHERE record_table = 'notification'"}]},{id:33,description:"comments-discussions-reactions-migration",statements:[{sql:"CREATE TABLE IF NOT EXISTS discussion (\n \tid TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    context TEXT,\n    resolved INTEGER NOT NULL,\n    comments TEXT,\n    space_id TEXT NOT NULL,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO discussion\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.context') as context,\n    json_extract(record_value, '$.value.resolved') as resolved,\n    json_extract(record_value, '$.value.comments') as comments,\n    json_extract(record_value, '$.value.space_id') as space_id,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'discussion'"},{sql:" DELETE FROM records WHERE record_table = 'discussion'"},{sql:" CREATE TABLE IF NOT EXISTS comment (\n \tid TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    text TEXT,\n    created_time REAL NOT NULL,\n    last_edited_time REAL,\n    alive INTEGER NOT NULL,\n    created_by_table TEXT,\n    created_by_id TEXT,\n    space_id TEXT NOT NULL,\n    content TEXT,\n    reactions TEXT,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO comment\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.text') as text,\n    json_extract(record_value, '$.value.created_time') as created_time,\n    json_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n    json_extract(record_value, '$.value.alive') as alive,\n    json_extract(record_value, '$.value.created_by_table') as created_by_table,\n    json_extract(record_value, '$.value.created_by_id') as created_by_id,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.content') as content,\n    json_extract(record_value, '$.value.reactions') as reactions,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'comment'"},{sql:" DELETE FROM records WHERE record_table = 'comment'"},{sql:" CREATE TABLE IF NOT EXISTS reaction (\n \tid TEXT NOT NULL,\n    space_id TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER,\n    created_time REAL,\n    parent_table TEXT NOT NULL,\n    parent_id TEXT NOT NULL,\n    icon TEXT NOT NULL,\n    actors TEXT,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO reaction\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.created_time') as created_time,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.icon') as icon,\n    json_extract(record_value, '$.value.actors') as actors,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'reaction'"},{sql:" DELETE FROM records WHERE record_table = 'reaction'"}]},{id:34,description:"add-discussion-id-to-notification",statements:[{sql:"ALTER TABLE notification\nADD COLUMN discussion_id TEXT"}]},{id:35,description:"add-suggested-questions-column-to-spaceview",statements:[{sql:"ALTER TABLE space_view\nADD COLUMN qna_suggested_questions TEXT"},{sql:"ALTER TABLE space_view\nADD COLUMN qna_suggested_questions_last_updated_time BIGINT"}]},{id:36,description:"add-ai-suggestions-column-to-space-view-table",statements:[{sql:"ALTER TABLE space_view\nADD COLUMN ai_suggestions TEXT"}]},{id:37,description:"create-space-user-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS space_user (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    user_id TEXT NOT NULL,\n    space_id TEXT NOT NULL,\n    invite_id TEXT,\n    role TEXT NOT NULL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:"INSERT OR IGNORE INTO space_user\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.user_id') as user_id,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.invite_id') as invite_id,\n    json_extract(record_value, '$.value.role') as role,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space_user'"},{sql:"DELETE FROM records WHERE record_table = 'space_user'"}]}],fastForward:{id:37,description:"fast-forward-to-create-space-user-table",statements:[{sql:"CREATE TABLE notion (id integer primary key, key unique, value)"},{sql:"CREATE TABLE key_value_store (id INTEGER PRIMARY KEY, key TEXT UNIQUE, value TEXT)"},{sql:"CREATE TABLE records (\nrecord_table TEXT,\nrecord_id TEXT,\nrecord_value TEXT,\ntimestamp NUMERIC,\nparent_table TEXT,\nparent_id TEXT,\nimportance NUMERIC,\nuser_id TEXT, is_offline, space_id TEXT,\nCONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)"},{sql:"CREATE TABLE block (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nproperties TEXT,\ncontent TEXT,\ndiscussions TEXT,\nview_ids TEXT,\ncollection_id TEXT,\npermissions TEXT,\ncreated_time REAL,\nlast_edited_time REAL,\ncopied_from TEXT,\nfile_ids TEXT,\nignore_block_count INTEGER,\nis_template INTEGER,\nparent_id TEXT,\nparent_table TEXT,\nalive INTEGER NOT NULL,\nmoved TEXT,\nformat TEXT,\ncreated_by TEXT,\nlast_edited_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\ncontent_classification TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_last_access_timestamp REAL NOT NULL,\nmeta_role TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\npermissions TEXT,\npermission_groups TEXT,\nemail_domains TEXT,\npages TEXT,\nicon TEXT,\ndisable_public_access INTEGER,\ndisable_public_access_requests INTEGER,\ndisable_guests INTEGER,\ndisable_move_to_space INTEGER,\ndisable_export INTEGER,\ndisable_space_page_edits INTEGER,\nbeta_enabled INTEGER,\ncreated_time REAL,\nlast_edited_time REAL,\ndeleted_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\nadmin_disable_public_access INTEGER,\nspace_pages TEXT,\nplan_type TEXT,\ninvite_link_enabled INTEGER,\ninitial_use_cases TEXT,\npublic_home_page TEXT,\nbot_settings TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, subscription_tier TEXT, disable_team_creation BOOLEAN, overdue_subscription TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space_view (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nbookmarked_pages TEXT,\nshared_pages TEXT,\nvisited_templates TEXT,\nsidebar_hidden_templates TEXT,\nnotify_mobile INTEGER NOT NULL,\nnotify_desktop INTEGER NOT NULL,\nnotify_email INTEGER NOT NULL,\nnotify_email_always INTEGER,\ncreated_getting_started INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\ncreated_onboarding_templates INTEGER,\nprivate_pages TEXT,\njoined INTEGER,\njoined_teams TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, qna_suggested_questions TEXT, qna_suggested_questions_last_updated_time BIGINT, ai_suggestions TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE transactions (\nid TEXT NOT NULL,\nuser_id TEXT,\nspace_id TEXT,\noperations TEXT NOT NULL,\ntimestamp REAL NOT NULL\n, debug TEXT)"},{sql:"CREATE TABLE user_root (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nspace_views TEXT,\nleft_spaces TEXT,\nspace_view_pointers TEXT,\ndeleted_email TEXT,\nlast_version REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE notion_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nemail TEXT NOT NULL,\ngiven_name TEXT,\nfamily_name TEXT,\nname TEXT,\nprofile_photo TEXT,\nonboarding_completed INTEGER,\nmobile_onboarding_completed INTEGER,\nclipper_onboarding_completed INTEGER,\nreverify INTEGER,\nis_banned INTEGER,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, suspended_time REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:'CREATE TABLE IF NOT EXISTS "collection_view" (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nname TEXT,\nicon TEXT,\npage_sort TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nformat TEXT,\nquery2 TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)'},{sql:"CREATE TABLE collection (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\ndescription TEXT,\nicon TEXT,\ncover TEXT,\nschema TEXT,\nformat TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nfile_ids TEXT,\ntemplate_pages TEXT,\ncopied_from TEXT,\nmigrated INTEGER,\nspace_id TEXT NOT NULL,\ndeleted_schema TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE team (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nname TEXT NOT NULL,\ndescription TEXT,\nicon TEXT,\ncreated_time REAL NOT NULL,\ncreated_by_table TEXT NOT NULL,\ncreated_by_id TEXT NOT NULL,\nlast_edited_time REAL,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\narchived_by TEXT,\nteam_pages TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nsettings TEXT,\nis_default INTEGER,\nmembership TEXT,\npermissions TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, pinned_pages TEXT, archived_at REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE user_settings (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nsettings TEXT,\n/* We also add any number of meta_ columns, but these are required */\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE notification (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nuser_id TEXT NOT NULL,\nactivity_id TEXT NOT NULL,\nreceived INTEGER NOT NULL,\nread INTEGER NOT NULL,\nvisited INTEGER NOT NULL,\nemailed INTEGER NOT NULL,\ninvalid INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\nnavigable_block_id TEXT,\ncollection_id TEXT,\ntype TEXT NOT NULL,\nend_time TEXT NOT NULL,\nchannel TEXT,\narchived_at INTEGER,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, discussion_id TEXT, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE discussion (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ncontext TEXT,\nresolved INTEGER NOT NULL,\ncomments TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE comment (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ntext TEXT,\ncreated_time REAL NOT NULL,\nlast_edited_time REAL,\nalive INTEGER NOT NULL,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nspace_id TEXT NOT NULL,\ncontent TEXT,\nreactions TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE reaction (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\ncreated_time REAL,\nparent_table TEXT NOT NULL,\nparent_id TEXT NOT NULL,\nicon TEXT NOT NULL,\nactors TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nuser_id TEXT NOT NULL,\nspace_id TEXT NOT NULL,\ninvite_id TEXT,\nrole TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE INDEX record_lru_deletion_order ON records (is_offline, importance, timestamp)"},{sql:"CREATE INDEX record_parent ON records (parent_id, user_id)"},{sql:"CREATE INDEX block_parent_id ON block (parent_id, meta_user_id)"},{sql:"CREATE INDEX lru_deletion_order ON block (meta_last_access_timestamp)"},{sql:"CREATE INDEX transactions_user_id ON transactions (user_id)"}]}}}}]);