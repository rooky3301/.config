"use strict";(self.webpackChunknotion_next=self.webpackChunknotion_next||[]).push([[959],{90959:(o,e,n)=>{n.r(e);n(57658),n(21703);var t=n(92595),r=n(97880),a=n(16861);const l={create:"Creating transaction",cancel:"Cancelling transaction",commitEmpty:"Ignoring empty transaction",commit:"Committing transaction"},c={err_no_multiselection:"Unable to get multi-selection for operation",err_no_store_position:"Unable to get store position for operation",err_no_source_block_store:"Unable to find source block store",err_no_target_block_store:"Unable to find target block store"},i=new WeakMap,s={onApplyOperation(o){let{operation:e,store:n}=o;const t=e.args,a=[];if(e.path.length&&a.push(`@ ${e.path.join(".")}`),("set"===e.command||"update"===e.command)&&(0,r.Kn)(t)&&!Array.isArray(t)){const o=Object.keys(t),e=3,n=o.slice(0,e).join(", ");o.length<=e?a.push(`{${n}}`):a.push(`{${n}, and ${o.length-e} more}`)}console.groupCollapsed(`%c  Applying operation %c${e.command}%c ${a.join(" ")}`,"font-weight: normal","font-weight: normal; color: blue","font-weight: normal"),console.log(e),console.log(n),console.trace(),console.groupEnd()},onTransactionEvent(o,e){const n=e.getUserActionForAnalyticsPurposesOnly(),t=l[o];console.groupCollapsed(`${t} ${n}`),console.log(e),console.trace(),console.groupEnd()},rememberStackTrace(o){const{stack:e}=new Error;if(e)for(const n of o)i.set(n,e)},logInvertedTextOperationError(o){let{invertedOperation:e,maybeRemappedInvertedOperation:n,errorCode:t,transaction:r}=o;console.groupCollapsed(`%c  Error %c${t}%c applying inverted text operation %c${e.command}%c from transaction "${r.getUserActionForAnalyticsPurposesOnly()}"`,"font-weight: normal","font-weight: normal; color: red","font-weight: normal","font-weight: normal; color: blue","font-weight: normal"),console.log(`Error description: ${c[t]}`),e===n?console.log("Inverted operation:",e):(console.log("Original inverted operation:",e),console.log("Remapped inverted operation:",n));const a=i.get(e);a&&console.log("Stack trace at creation of inverted operation:",a),console.trace(),console.groupEnd()}};t.exposeDebugValue("toggleTransactionDebugging",(()=>{const o=!a.Z.provider;a.Z.provider=o?s:void 0,console.log(`Transaction debugging is now ${o?"enabled":"disabled"}.`)})),a.Z.provider&&(console.log("Installing new transaction debug provider."),a.Z.provider=s)}}]);